import _defineProperty from "@babel/runtime/helpers/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import i18next from 'i18next';
import HttpApi from 'i18next-http-backend';
import LngDet from 'i18next-browser-languagedetector';
import Observer from './Observer';
import docReady from './docReady';
import renderer from './renderer';
import { missingHandler } from './missingHandler';
import { parseOptions, getPathname } from './utils';

function getDefaults() {
  return {
    autorun: true,
    ele: document.body,
    keyAttr: 'i18next-key',
    ignoreWithoutKey: false,
    ignoreTags: ['SCRIPT'],
    ignoreIds: [],
    ignoreClasses: [],
    translateAttributes: ['placeholder', 'title', 'alt', 'value#input.type=button', 'value#input.type=submit'],
    mergeTags: [],
    inlineTags: [],
    ignoreInlineOn: [],
    cleanIndent: true,
    ignoreCleanIndentFor: ['PRE', 'CODE'],
    cleanWhitespace: true,
    nsSeparator: '#||#',
    keySeparator: '#|#',
    debug: window.location.search && window.location.search.indexOf('debug=true') > -1,
    saveMissing: window.location.search && window.location.search.indexOf('saveMissing=true') > -1,
    namespace: false,
    namespaceFromPath: false,
    missingKeyHandler: missingHandler,
    ns: [],
    onInitialTranslate: function onInitialTranslate() {}
  };
} // auto initialize on dom ready


var domReady = false;
var initialized = false;
docReady(function () {
  domReady = true;
  if (!initialized) init();
}); // extend i18next with default extensions

i18next.use(HttpApi);
i18next.use(LngDet); // log out missings
// i18next.on('missingKey', missingHandler);
// store last init options - for case init is called before dom ready

var lastOptions = {};

function changeNamespace(ns) {
  if (!ns && lastOptions.namespaceFromPath) ns = getPathname();
  lastOptions.ns.push(ns);
  lastOptions.defaultNS = ns;
  i18next.loadNamespaces(lastOptions.ns, function () {
    i18next.setDefaultNamespace(ns);
  });
}

var renderers = [];

function init() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  options = _objectSpread(_objectSpread(_objectSpread({}, getDefaults()), lastOptions), options);
  options = parseOptions(options); // delay init from domReady

  if (!options.ele) {
    delete options.ele;
    lastOptions = options;
  }

  initialized = true;
  var observer;

  function addRenderers(children) {
    for (var i = 0; i < children.length; i++) {
      var c = children[i];

      if (options.ignoreTags.indexOf(c.tagName) < 0 && options.ignoreIds.indexOf(c.id) < 0 && options.ignoreClasses.indexOf(c.className) < 0 && !c.attributes.localized && !c.attributes.translated) {
        var r = renderer(c, observer);
        renderers.push(r);
        r.render();
      }
    }
  }

  function waitForInitialRender(children, timeout, callback) {
    var allRendered = true;
    setTimeout(function () {
      for (var i = 0; i < children.length; i++) {
        var c = children[i];

        if (options.ignoreTags.indexOf(c.tagName) < 0 && options.ignoreIds.indexOf(c.id) < 0 && options.ignoreClasses.indexOf(c.className) < 0 && !c.attributes.localized && !c.attributes.translated) {
          if (allRendered) waitForInitialRender(children, 100, callback);
          allRendered = false;
          break;
        }
      }

      if (allRendered) callback();
    }, timeout);
  }

  var todo = 1;
  if (!domReady) todo++;
  if (options.autorun === false) todo++;

  function done() {
    todo -= 1;

    if (!todo) {
      if (!options.ele) options.ele = document.body;
      var children = options.ele.children;
      observer = new Observer(options.ele);
      addRenderers(children);
      observer.on('changed', function (mutations) {
        renderers.forEach(function (r) {
          return r.debouncedRender();
        });
        addRenderers(children);
      });
      waitForInitialRender(children, 0, function () {
        if (options.ele.style && options.ele.style.display === 'none') {
          options.ele.style.display = 'block';
        }

        options.onInitialTranslate();
      });
    }
  }

  i18next.init(options, done);

  if (!domReady) {
    docReady(done);
  }

  if (options.autorun === false) return {
    start: done
  };
}

function forceRerender() {
  renderers.forEach(function (r) {
    r.render(true); // enforce a rerender
  });
}

export default {
  init: init,
  i18next: i18next,
  changeNamespace: changeNamespace,
  forceRerender: forceRerender
};